<Page
    x:Class="WeeLight.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="using:WeeLight.Converters"
    xmlns:models="using:WeeLight.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource SystemControlAcrylicWindowBrush}"
    >

    <Page.Resources>
        <c:BoolNegationConverter x:Key="BoolNegationConverter"/>
        <c:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <c:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter"/>

        <ControlTemplate x:Key="TemperatureColorButtonTemplate" TargetType="Button">
            <Grid>
                <Ellipse
                    Height="50"
                    Width="50"
                    Fill="{TemplateBinding Background}"
                    PointerEntered="TemperatureColorButton_PointerEntered"
                    PointerExited="TemperatureColorButton_PointerExited"
                    />
                <TextBlock
                    Foreground="Black"
                    TextAlignment="Center"
                    FontSize="12"
                    VerticalAlignment="Center"
                    Text="{TemplateBinding Content}"
                    PointerEntered="TemperatureColorButton_PointerEntered"
                    />
            </Grid>
        </ControlTemplate>


        <DataTemplate x:Key="DeviceListItemTemplate" x:DataType="models:YeeDevice">
            <StackPanel
                Orientation="Horizontal"
                >
                <FontIcon
                    FontFamily="{StaticResource SymbolThemeFontFamily}"
                    Glyph="&#xEA80;"
                    />

                <TextBlock
                    Text="{x:Bind Name}"
                    Margin="16,0,0,0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Stretch"
                    />
            </StackPanel>
        </DataTemplate>
    </Page.Resources>

    <SplitView x:Name="splitView"
               IsPaneOpen="True"
               DisplayMode="Inline"
               OpenPaneLength="196"
               >
        <SplitView.Pane>
            <Grid Background="{ThemeResource SystemControlAcrylicWindowBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <TextBlock
                    Text="Devices"
                    Margin="50,12,0,0"
                    Style="{StaticResource BaseTextBlockStyle}"
                    />
                
                <ListView
                    x:Name="DeviceList"
                    Grid.Row="1"
                    Margin="0,12,0,0"
                    SelectionMode="Single"
                    IsItemClickEnabled="True"
                    VerticalAlignment="Stretch"
                    ItemClick="DeviceList_ItemClick"
                    ItemsSource="{x:Bind VM.Devices}"
                    ItemTemplate="{StaticResource DeviceListItemTemplate}"
                    SelectedIndex="{x:Bind VM.SelectedDeviceIndex, Mode=OneWay}"
                    />

                <ListView
                    x:Name="NoDevicesList"
                    Grid.Row="1"
                    IsItemClickEnabled="False"
                    SelectionMode="None"
                    VerticalAlignment="Stretch"
                    Visibility="{x:Bind VM.NoDevicesFound, Mode=OneWay}"
                    Margin="2,0,0,0"
                    >
                    <StackPanel Orientation="Horizontal" AutomationProperties.Name="{x:Bind Name}">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE783;"/>
                        <TextBlock
                            Text="No Devices Available"
                            Margin="16,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Stretch"
                            />
                    </StackPanel>
                </ListView>

                <ProgressBar
                    x:Name="DeviceListLoadingIndicator" Grid.Row="1"
                    Visibility="{x:Bind VM.IsDeviceListLoading, Mode=OneWay}"
                    IsIndeterminate="True"
                    />

                <ListView
                    x:Name="TopLevelNavBottom"
                    Grid.Row="2"
                    Margin="0,0,0,12"
                    SelectionMode="None"
                    VerticalAlignment="Stretch"
                    IsItemClickEnabled="True"
                    ItemClick="TopLevelNavBottom_ItemClick"
                    IsEnabled="{x:Bind VM.IsDeviceListLoading, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                    >
                    <StackPanel x:Name="RefreshDevicesButton" Orientation="Horizontal" Margin="2,0,0,0">
                        <SymbolIcon Symbol="Refresh"/>
                        <TextBlock Text="Refresh Devices" Margin="16,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>
                </ListView>
            </Grid>

        </SplitView.Pane>

        <Grid Margin="12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel
                x:Name="Content"
                Orientation="Vertical"
                Visibility="{x:Bind VM.SelectedDevice, Mode=OneWay, Converter={StaticResource ObjectToVisibilityConverter}}"
                >
                <TextBlock Style="{StaticResource TitleTextBlockStyle}"
                           Text="{x:Bind VM.SelectedDevice.Name, Mode=OneWay}"/>
                
                <!--Power toggle-->
                <ToggleSwitch
                    x:Name="DevicePowerSwitch"
                    Header="Power"
                    IsOn="{x:Bind VM.SelectedDevice.IsPowerOn, Mode=TwoWay}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    AllowDrop="True"/>


                <!--Brightness control-->
                <Slider
                    x:Name="BrightnessSlider"
                    Header="Brightness"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Width="290" 
                    Minimum="0"
                    Maximum="100"
                    StepFrequency="10"
                    TickFrequency="20"
                    SmallChange="10"
                    LargeChange="10"
                    TickPlacement="Outside"
                    Value="{x:Bind VM.SelectedDevice.Brightness, Mode=OneWay}"
                    ValueChanged="BrightnessSlider_ValueChanged"
                    IsEnabled="{x:Bind VM.SelectedDevice.IsPowerOn, Mode=OneWay}"
                    />


                <!--Temperature control-->
                <StackPanel
                    Orientation="Vertical"
                    Visibility="{x:Bind VM.SelectedDevice.CanSetTemperature, Mode=OneWay}"
                    >
                    <StackPanel
                        Orientation="Horizontal"
                        Margin="0,0,0,10"
                        Spacing="20"
                        >
                        <TextBlock Text="Temperature" Style="{StaticResource BodyTextBlockStyle}"/>
                        <TextBlock Style="{StaticResource BodyTextBlockStyle}" FontWeight="Light">
                                <Run Text="Current: "/>
                                <Run Text="{x:Bind VM.SelectedDevice.Temperature, Mode=OneWay}"/>
                                <Run Text=" K"/>
                        </TextBlock>
                    </StackPanel>

                    <VariableSizedWrapGrid
                        x:Name="TemperatureButtons"
                        Orientation="Horizontal"
                        >
                    </VariableSizedWrapGrid>
                </StackPanel>

                <!--Color control-->
                <StackPanel
                    Orientation="Vertical"
                    Visibility="{x:Bind VM.SelectedDevice.CanSetRGBColor, Mode=OneWay}"
                    >
                    <StackPanel
                        Orientation="Horizontal"
                        Margin="0,0,0,10"
                        Spacing="20"
                        >
                        <TextBlock Text="Color" Style="{StaticResource BodyTextBlockStyle}"/>
                    </StackPanel>

                    <VariableSizedWrapGrid
                        x:Name="ColorButtons"
                        Orientation="Horizontal"
                        >
                    </VariableSizedWrapGrid>
                </StackPanel>
            </StackPanel>

            <TextBlock
                x:Name="NoDevicesHelpText"
                Visibility="{x:Bind VM.NoDevicesFound, Mode=OneWay}"
                Style="{StaticResource BaseTextBlockStyle}"
                VerticalAlignment="Center"
                TextWrapping="WrapWholeWords"
                Text="Check if the lights are turned on and if LAN Control is enabled."
                />
        </Grid>


    </SplitView>
</Page>
